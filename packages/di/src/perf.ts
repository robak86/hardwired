import { module } from './module/Module';

class SomeClass {
  constructor(...args: any[]) {}
}

const ab0 = module('a')
  .value('a', 1)
  .value('b', 1)
  .value('c', 1)
  .value('d', 1)
  .value('e', 1)
  .value('f', 1)
  .value('g', 1)
  .value('h', 1)
  .value('i', 1)
  .value('j', 1)
  .value('k', 1)
  .value('aa', 1)
  .value('ab', 1)
  .value('ac', 1)
  .value('ad', 1)
  .value('ae', 1)
  .value('af', 1)
  .value('ag', 1)
  .value('ah', 1)
  .value('ai', 1)
  .value('aj', 1)
  .value('ak', 1)
  .value('ba', 1)
  .value('bb', 1)
  .value('bc', 1)
  .value('bd', 1)
  .value('be', 1)
  .value('bf', 1)
  .value('bg', 1)
  .value('bh', 1)
  .value('bi', 1)
  .value('bj', 1)
  .value('bk', 1)
  .value('baa', 1)
  .value('bab', 1)
  .value('bac', 1)
  .value('bad', 1)
  .value('bae', 1)
  .value('baf', 1)
  .value('bag', 1)
  .value('bah', 1)
  .value('bai', 1)
  .value('baj', 1)
  .value('bak', 1)
  .value('cba', 1)
  .value('asa', 1)
  .value('asb', 1)
  .value('asc', 1)
  .value('asd', 1)
  .value('ase', 1)
  .value('asf', 1)
  .value('asg', 1)
  .value('ash', 1)
  .value('asi', 1)
  .value('asj', 1)
  .value('ask', 1)
  .value('asaa', 1)
  .value('asab', 1)
  .value('asac', 1)
  .value('asad', 1)
  .value('asae', 1)
  .value('asaf', 1)
  .value('asag', 1)
  .value('asah', 1)
  .value('asai', 1)
  .value('asaj', 1)
  .value('asak', 1)
  .value('asba', 1)
  .value('asbb', 1)
  .value('asbc', 1)
  .value('asbd', 1)
  .value('asbe', 1)
  .value('asbf', 1)
  .value('asbg', 1)
  .value('asbh', 1)
  .value('asbi', 1)
  .value('asbj', 1)
  .value('asbk', 1)
  .value('asbaa', 1)
  .value('asbab', 1)
  .value('asbac', 1)
  .value('asbad', 1)
  .value('asbae', 1)
  .value('asbaf', 1)
  .value('asbag', 1)
  .value('asbah', 1)
  .value('asbai', 1)
  .value('asbaj', 1)
  .value('asbak', 1)
  .value('ascba', 1)
  .singleton('s111', SomeClass, c => [c.a])
  .singleton('s112', SomeClass, c => [c.a])
  .singleton('s113', SomeClass, c => [c.a])
  .singleton('s114', SomeClass, c => [c.a])
  .singleton('s115', SomeClass, c => [c.a])
  .singleton('s116', SomeClass, c => [c.a])
  .singleton('s117', SomeClass, c => [c.a])
  .singleton('s118', SomeClass, c => [c.a])
  .singleton('s119', SomeClass, c => [c.a])
  .singleton('s110', SomeClass, c => [c.a])
  .singleton('s1123', SomeClass, c => [c.a])
  .singleton('as111', SomeClass, c => [c.a])
  .singleton('as112', SomeClass, c => [c.a])
  .singleton('as113', SomeClass, c => [c.a])
  .singleton('as114', SomeClass, c => [c.a])
  .singleton('as115', SomeClass, c => [c.a])
  .singleton('as116', SomeClass, c => [c.a])
  .singleton('as117', SomeClass, c => [c.a])
  .singleton('as118', SomeClass, c => [c.a])
  .singleton('as119', SomeClass, c => [c.a])
  .singleton('as110', SomeClass, c => [c.a])
  .singleton('as1123', SomeClass, c => [c.a])
  .singleton('aass111', SomeClass, c => [c.a])
  .singleton('aass112', SomeClass, c => [c.a])
  .singleton('aass113', SomeClass, c => [c.a])
  .singleton('aass114', SomeClass, c => [c.a])
  .singleton('aass115', SomeClass, c => [c.a])
  .singleton('aass116', SomeClass, c => [c.a])
  .singleton('aass117', SomeClass, c => [c.a])
  .singleton('aass118', SomeClass, c => [c.a])
  .singleton('aass119', SomeClass, c => [c.a])
  .singleton('aass110', SomeClass, c => [c.a])
  .singleton('aass1123', SomeClass, c => [c.a])
  .singleton('aasas111', SomeClass, c => [c.a])
  .singleton('aasas112', SomeClass, c => [c.a])
  .singleton('aasas113', SomeClass, c => [c.a])
  .singleton('aasas114', SomeClass, c => [c.a])
  .singleton('aasas115', SomeClass, c => [c.a])
  .singleton('aasas116', SomeClass, c => [c.a])
  .singleton('aasas117', SomeClass, c => [c.a])
  .singleton('aasas118', SomeClass, c => [c.a])
  .singleton('aasas119', SomeClass, c => [c.a])
  .singleton('aasas110', SomeClass, c => [c.a])
  .singleton('aasas1123', SomeClass, c => [c.a]);

const ab = module('a')
  .value('a', 1)
  .value('b', 1)
  .value('c', 1)
  .value('d', 1)
  .value('e', 1)
  .value('f', 1)
  .value('g', 1)
  .value('h', 1)
  .value('i', 1)
  .value('j', 1)
  .value('k', 1)
  .value('aa', 1)
  .value('ab', 1)
  .value('ac', 1)
  .value('ad', 1)
  .value('ae', 1)
  .value('af', 1)
  .value('ag', 1)
  .value('ah', 1)
  .value('ai', 1)
  .value('aj', 1)
  .value('ak', 1)
  .value('ba', 1)
  .value('bb', 1)
  .value('bc', 1)
  .value('bd', 1)
  .value('be', 1)
  .value('bf', 1)
  .value('bg', 1)
  .value('bh', 1)
  .value('bi', 1)
  .value('bj', 1)
  .value('bk', 1)
  .value('baa', 1)
  .value('bab', 1)
  .value('bac', 1)
  .value('bad', 1)
  .value('bae', 1)
  .value('baf', 1)
  .value('bag', 1)
  .value('bah', 1)
  .value('bai', 1)
  .value('baj', 1)
  .value('bak', 1)
  .value('cba', 1)
  .value('asa', 1)
  .value('asb', 1)
  .value('asc', 1)
  .value('asd', 1)
  .value('ase', 1)
  .value('asf', 1)
  .value('asg', 1)
  .value('ash', 1)
  .value('asi', 1)
  .value('asj', 1)
  .value('ask', 1)
  .value('asaa', 1)
  .value('asab', 1)
  .value('asac', 1)
  .value('asad', 1)
  .value('asae', 1)
  .value('asaf', 1)
  .value('asag', 1)
  .value('asah', 1)
  .value('asai', 1)
  .value('asaj', 1)
  .value('asak', 1)
  .value('asba', 1)
  .value('asbb', 1)
  .value('asbc', 1)
  .value('asbd', 1)
  .value('asbe', 1)
  .value('asbf', 1)
  .value('asbg', 1)
  .value('asbh', 1)
  .value('asbi', 1)
  .value('asbj', 1)
  .value('asbk', 1)
  .value('asbaa', 1)
  .value('asbab', 1)
  .value('asbac', 1)
  .value('asbad', 1)
  .value('asbae', 1)
  .value('asbaf', 1)
  .value('asbag', 1)
  .value('asbah', 1)
  .value('asbai', 1)
  .value('asbaj', 1)
  .value('asbak', 1)
  .value('ascba', 1);

const ab1 = module('a')
  .value('a', 1)
  .value('b', 1)
  .value('c', 1)
  .value('d', 1)
  .value('e', 1)
  .value('f', 1)
  .value('g', 1)
  .value('h', 1)
  .value('i', 1)
  .value('j', 1)
  .value('k', 1)
  .value('aa', 1)
  .value('ab', 1)
  .value('ac', 1)
  .value('ad', 1)
  .value('ae', 1)
  .value('af', 1)
  .value('ag', 1)
  .value('ah', 1)
  .value('ai', 1)
  .value('aj', 1)
  .value('ak', 1)
  .value('ba', 1)
  .value('bb', 1)
  .value('bc', 1)
  .value('bd', 1)
  .value('be', 1)
  .value('bf', 1)
  .value('bg', 1)
  .value('bh', 1)
  .value('bi', 1)
  .value('bj', 1)
  .value('bk', 1)
  .value('baa', 1)
  .value('bab', 1)
  .value('bac', 1)
  .value('bad', 1)
  .value('bae', 1)
  .value('baf', 1)
  .value('bag', 1)
  .value('bah', 1)
  .value('bai', 1)
  .value('baj', 1)
  .value('bak', 1)
  .value('cba', 1)
  .value('asa', 1)
  .value('asb', 1)
  .value('asc', 1)
  .value('asd', 1)
  .value('ase', 1)
  .value('asf', 1)
  .value('asg', 1)
  .value('ash', 1)
  .value('asi', 1)
  .value('asj', 1)
  .value('ask', 1)
  .value('asaa', 1)
  .value('asab', 1)
  .value('asac', 1)
  .value('asad', 1)
  .value('asae', 1)
  .value('asaf', 1)
  .value('asag', 1)
  .value('asah', 1)
  .value('asai', 1)
  .value('asaj', 1)
  .value('asak', 1)
  .value('asba', 1)
  .value('asbb', 1)
  .value('asbc', 1)
  .value('asbd', 1)
  .value('asbe', 1)
  .value('asbf', 1)
  .value('asbg', 1)
  .value('asbh', 1)
  .value('asbi', 1)
  .value('asbj', 1)
  .value('asbk', 1)
  .value('asbaa', 1)
  .value('asbab', 1)
  .value('asbac', 1)
  .value('asbad', 1)
  .value('asbae', 1)
  .value('asbaf', 1)
  .value('asbag', 1)
  .value('asbah', 1)
  .value('asbai', 1)
  .value('asbaj', 1)
  .value('asbak', 1)
  .value('ascba', 1);

const ab2 = module('a')
  .value('a', 1)
  .value('b', 1)
  .value('c', 1)
  .value('d', 1)
  .value('e', 1)
  .value('f', 1)
  .value('g', 1)
  .value('h', 1)
  .value('i', 1)
  .value('j', 1)
  .value('k', 1)
  .value('aa', 1)
  .value('ab', 1)
  .value('ac', 1)
  .value('ad', 1)
  .value('ae', 1)
  .value('af', 1)
  .value('ag', 1)
  .value('ah', 1)
  .value('ai', 1)
  .value('aj', 1)
  .value('ak', 1)
  .value('ba', 1)
  .value('bb', 1)
  .value('bc', 1)
  .value('bd', 1)
  .value('be', 1)
  .value('bf', 1)
  .value('bg', 1)
  .value('bh', 1)
  .value('bi', 1)
  .value('bj', 1)
  .value('bk', 1)
  .value('baa', 1)
  .value('bab', 1)
  .value('bac', 1)
  .value('bad', 1)
  .value('bae', 1)
  .value('baf', 1)
  .value('bag', 1)
  .value('bah', 1)
  .value('bai', 1)
  .value('baj', 1)
  .value('bak', 1)
  .value('cba', 1)
  .value('asa', 1)
  .value('asb', 1)
  .value('asc', 1)
  .value('asd', 1)
  .value('ase', 1)
  .value('asf', 1)
  .value('asg', 1)
  .value('ash', 1)
  .value('asi', 1)
  .value('asj', 1)
  .value('ask', 1)
  .value('asaa', 1)
  .value('asab', 1)
  .value('asac', 1)
  .value('asad', 1)
  .value('asae', 1)
  .value('asaf', 1)
  .value('asag', 1)
  .value('asah', 1)
  .value('asai', 1)
  .value('asaj', 1)
  .value('asak', 1)
  .value('asba', 1)
  .value('asbb', 1)
  .value('asbc', 1)
  .value('asbd', 1)
  .value('asbe', 1)
  .value('asbf', 1)
  .value('asbg', 1)
  .value('asbh', 1)
  .value('asbi', 1)
  .value('asbj', 1)
  .value('asbk', 1)
  .value('asbaa', 1)
  .value('asbab', 1)
  .value('asbac', 1)
  .value('asbad', 1)
  .value('asbae', 1)
  .value('asbaf', 1)
  .value('asbag', 1)
  .value('asbah', 1)
  .value('asbai', 1)
  .value('asbaj', 1)
  .value('asbak', 1)
  .value('ascba', 1);

const a = module('a')
  .import('imported0', ab0)
  .import('imported', ab)
  .import('imported1', ab1)
  .import('imported2', ab2)
  .value('asdf', 1)
  .value('cba', 1)
  .replace('cba', ctx => ctx.imported.a);
